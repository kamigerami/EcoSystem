# vi: set ft=ruby :

# Build a Docker Swarm / Consul / Registrator EcoSystem
# Created by Kami Gerami
#

# Vars
domainname = "example.com"
master = "master"
worker = "worker"

nodes = [
  { :hostname => "#{master}-01.#{domainname}", :ip => "192.168.1.101" },
  { :hostname => "#{worker}-01.#{domainname}", :ip => "192.168.10.121"},
  { :hostname => "#{worker}-02.#{domainname}", :ip => "192.168.20.122" },
  { :hostname => "#{worker}-03.#{domainname}", :ip => "192.168.30.123" },
  { :hostname => "#{worker}-04.#{domainname}", :ip => "192.168.40.124" },
]

groups = { 
  "#{master}" => ["#{master}-01.#{domainname}"],
  "#{worker}" => ["#{worker}-01.#{domainname}", "#{worker}-02.#{domainname}", "#{worker}-03.#{domainname}", "#{worker}-04.#{domainname}"],
  "all:children" => ["#{master}","#{worker}"]
}

Vagrant.configure(2) do |config|

  nodes.each do |node|
 
  # set the host specific vars
  hostname = node[:hostname]
  ip = node[:ip]
  memory = node[:memory] || "512" # set 512 as default if nothing else is set
  run = node[:run] || "always" # set provisioner to run always if nothing else is set
  autostart = node[:autostart] || "true" # set to always autostart machines unless set
  box = node[:box] || "centos/7" # set to run centos/7 as default unless set
  provisioner = node[:provisioner] || "ansible" # sets ansible as default provisioner
  docker_cmd = node[:cmd] # docker command
  docker_args = node[:args] # docker arguments
  image = node[:image] # docker image 

  # create ansible.extra_vars
  if hostname.start_with?("#{master}")

    ansible_vars = {
      :master => {
        :hostname => "#{hostname}",
        :ip => "#{ip}",
      } 
    }
  end
      
    config.vm.define hostname, autostart: autostart do |config|    

      config.vm.box = box
      config.vm.hostname = hostname
      config.vm.network :private_network, ip: ip
      config.vm.provider :virtualbox do |vb|
        vb.customize ["modifyvm", :id, "--memory", memory, "--name", hostname]
      end

     # config.vm.provision "shell", run: "always", path: "kubeinstall.sh"

      #if hostname.start_with?("#{master}")
      #  config.vm.provision "shell", run: "always", path: "master.sh"
      #end
     
      # always run ansible provisioner
      config.vm.provision "ansible", run: run do |pv|
            pv.playbook = "provisioning/site.yml"
            pv.sudo = true
            pv.groups = groups
            pv.extra_vars = ansible_vars
      end

    end
  end
end

